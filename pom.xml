<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.github.zhgxun</groupId>
    <artifactId>talk</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>talk</name>
    <description>收集整理国内外优秀的小说和名著，将文本翻译为音频，方便路上，出行途中也可欣赏自己喜爱的著作。</description>
    <url>https://github.com/zhgxun/talk</url>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.0.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>11</java.version>

        <!--
            以下为插件库版本
        -->
        <mybatis.version>1.3.2</mybatis.version>
        <lombok.version>1.18.4</lombok.version>
        <logback.version>1.2.3</logback.version>
        <janino.version>3.0.6</janino.version>
        <log4j.version>1.7.12</log4j.version>
        <aip.version>4.8.0</aip.version>
        <gson.version>2.8.5</gson.version>
    </properties>

    <dependencies>
        <!--
            提供AOP切面编程
        -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>

        <!--
            提供web服务, 包括tomcat, springmvc, json等封装和处理
            排除默认提供的 tomcat web 服务, 使用 undertow 替代
        -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!--
            https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-undertow
            使用 undertow 作为web服务提供
        -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-undertow</artifactId>
        </dependency>

        <!--
            导入原始的 mybatis 包, 扫描需要自行处理, 使用spring boot2 封装的包, 能优雅的处理包扫描, 并提供了注解
        -->
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>${mybatis.version}</version>
        </dependency>

        <!--
            actuator服务监控与管理
            当前默认只提供健康检查端口, 可访问查看, 其余需要手动开启
            http://127.0.0.1:8080/actuator
            健康检查端口为: http://127.0.0.1:8080/actuator/health
        -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <!--
            https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-configuration-processor
            注解处理器
        -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
        </dependency>


        <!--
            单元测试相关
        -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!--
            https://mvnrepository.com/artifact/mysql/mysql-connector-java
            该包需要导入, 默认自动导入 com.mysql.cj.jdbc.Driver 驱动包, 该包由该 jar 包提供
        -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>

        <!--
            百度语音合成相关组件包
            源码参考: https://github.com/Baidu-AIP/java-sdk
        -->
        <dependency>
            <groupId>com.baidu.aip</groupId>
            <artifactId>java-sdk</artifactId>
            <version>${aip.version}</version>
        </dependency>

        <!--
            https://mvnrepository.com/artifact/com.google.code.gson/gson
            Json 解析工具
        -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>${gson.version}</version>
        </dependency>

        <!--
            https://mvnrepository.com/artifact/org.projectlombok/lombok
        -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>

        <!--
            logback, 配置日志自动清理机制
            详细配置查看 classpath:logback-spring.xml
        -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>
        <dependency>
            <groupId>org.codehaus.janino</groupId>
            <artifactId>janino</artifactId>
            <version>${janino.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>log4j-over-slf4j</artifactId>
            <version>${log4j.version}</version>
        </dependency>
    </dependencies>

    <build>
        <finalName>talk</finalName>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>
